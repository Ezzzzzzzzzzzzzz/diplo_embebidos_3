#+title: Framework Monytor - Manual Técnico
#+author: Martinez Sanchez Victor
#+date: Diplomado de Linux Embebido
#+language: en
#+options: toc:nil

El projecto /Monytor/ intenta ser un pequeño framework para el desarrollo
de aplicaciones que en general requieren el sensado de algunas variables
y realizar alguna acción con las variables sensadas.

En la siguiente tabla se pueden observar los temas a tratar en

|-----------------------------------------------------------------+--------|
| Contenido                                                       | Liga   |
|-----------------------------------------------------------------+--------|
| [[TechManual.org#introducción][Introducción]]                                                  |        |
|-----------------------------------------------------------------+--------|
| [[TechManual.org#analisis][Analisis]]                                                      |        |
|-----------------------------------------------------------------+--------|
| [[TechManual.org#implementación][Implementación]]                                                |        |
|-----------------------------------------------------------------+--------|
| *Aplicación*                                                    |        |
|-----------------------------------------------------------------+--------|
| *Conclusiones*                                                  |        |
|-----------------------------------------------------------------+--------|


** Introducción

Muchas de las aplicaciones de sistemas embebidos requieren el uso de sensores
y actuadores de alguna forma, por ejemplo sistemas como invernaderos inteligentes,
monitoreo de carga de manera remota, monitoreo de pacientes, domotica; En fin
existen muchos sistemas de este tipo y en general la mayoria de este tipo
de aplicaciones requieren hacer el sensado con alguna variable y despues communicar
o realizar algun acción con esos valores leidos.

Para facilitar el desarrollo de este tipo de aplicaciones se decidio crear un
framework, con el cual las personas que requieren el uso de sensores y actuadores
les facilite la integración de estos, y asi solamente centrarse en las variables
que quiere sensar y el que va a hacer despues con estos datos obtenidos.


** Analisis

Como se describio en la Introduccion las aplicaciones embebidas que identificamos
requieren en general de 2 agentes, el /sensor/ el /actuador/ para que se pueda
facilidar la integración de estos, se requiere el uso de un tercer agente
el cual se llamara /servidor/, a continuación se describiran estos 3 agentes
con el punto de vista del framework:

	- /Sensor/: Programa el cual requiere obtener los datos de una variable fisica.
	- /Actuador/: Programa el cual realizara alguna acción con los datos que recibe.
	- /Servidor/: Programa que su única tarea es administrar a los sensores y actuadores.

Utilizando las facilidades que nos proporcionan los sistemas GNU/Linux en cuanto al
desarrollo de aplicaciones la solución del framework se orientó al uso de estas facilidades
tales como /sockets/, /pipes/, /redireccionamiento/, /scripts de arranque/ entre otros.

La aplicación se desarrollo en el Lenguaje C utilizando librerias estandar para que
sea facilmente portable entre sistemas de tipo UNIX. A continuación se mostrara el diagrama
mostrando la arquitectura general de los agentes identificados y donde interactuan.

#+ATTR_HTML: class="center"
[[img/agente_arch.png]]

Los pipes se usan para para redireccionar la salida y entrada estandar de los sensores y
notificadores respectivamente, de esta forma se pode asegurar que añadir un nuevo sensor
es sencillo, ya que no se pide usar algun /include/ del framework desarrollado. A continuación
se listan las caracteristicas que deben de tener los sensores y los actuadores para que
puedan interactuar con el framework.

	- Requerimientos Sensor: El programa tendra la lógica para leer el sensor y lo tiene que enviar por la salida estandar.(en C un /printf/)
	- Requerimientos Actuador: El programa leera de la entrada estandar(En C un /scanf/) el valor de los sensores que el servidor tiene registrado. La lógica la hace el programa.

Se cree que teniendo estas caracteristicas se pueden agregar sensores y actuadores de manera
sencilla y la persona que esta desarrollando con la ayuda del framework solamente se tiene que
centrar en la funcionalidad del sistema.

Las ventajas de poder usar esta solución se tienen cuando se poseen muchos sensores y para no
mezclar toda la funcionalidad se podria modularizar el sistema a desarrollar.


** Implementación

En esta sección se mostraran partes del código que se desarrollo, con una explicación para mostrar
el como se implementó el sistema.


#+BEGIN_CENTER
¡Mucha suerte!

/– Martínez Sánchez Víctor/
#+END_CENTER
